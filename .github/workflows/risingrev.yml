name: Build RisingOS for TECNO KJ7

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: üì¶ Install dependencies
      run: |
        sudo apt update
        sudo apt install -y git-core gnupg flex bison build-essential zip curl zlib1g-dev \
          gcc-multilib g++-multilib libc6-dev-i386 libncurses5-dev \
          libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils \
          xsltproc unzip fontconfig python-is-python3 repo

    - name: üìÅ Setup ROM directory
      run: mkdir rom

    - name: üîê Setup GitHub token for private repo access
      run: |
        git config --global credential.helper store
        echo "https://${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials

    - name: üì• Init RisingOS manifest
      working-directory: rom
      run: |
        repo init -u https://github.com/RisingOS-Revived/android.git -b fifteen --git-lfs

    - name: üß© Inject local manifest for TECNO KJ7
      working-directory: rom
      run: |
        mkdir -p .repo/local_manifests
        echo '<?xml version="1.0" encoding="UTF-8"?>' > .repo/local_manifests/kj7.xml
        echo '<manifest>' >> .repo/local_manifests/kj7.xml
        echo '  <remote name="transsion"' >> .repo/local_manifests/kj7.xml
        echo '          fetch="https://github.com/Transsion-Dev/"' >> .repo/local_manifests/kj7.xml
        echo '          revision="lineage-22.1" />' >> .repo/local_manifests/kj7.xml
        echo '  <project name="device_tecno_KJ7" path="device/tecno/KJ7" remote="transsion" />' >> .repo/local_manifests/kj7.xml
        echo '  <project name="vendor_tecno_KJ7" path="vendor/tecno/KJ7" remote="transsion" />' >> .repo/local_manifests/kj7.xml
        echo '  <project name="android_hardware_transsion" path="hardware/transsion" remote="transsion" />' >> .repo/local_manifests/kj7.xml
        echo '  <project name="device_tecno_KJ7-kernel" path="kernel/tecno/KJ7" remote="transsion" />' >> .repo/local_manifests/kj7.xml
        echo '</manifest>' >> .repo/local_manifests/kj7.xml

    - name: üîÑ Sync source and device tree
      working-directory: rom
      run: |
        repo sync -j4 --force-sync --no-tags --no-clone-bundle
        rm -rf .repo/projects/*/.git .repo/project-objects

    - name: ‚öôÔ∏è Setup build environment
      working-directory: rom
      run: |
        source build/envsetup.sh
        lunch rising_KJ7-userdebug

    - name: üöß Build RisingOS (Vanilla)
      working-directory: rom
      run: |
        export RISING_MAINTAINER="kaminarich"
        export PRODUCT_BUILD_PROP_OVERRIDES+=' RisingChipset="Mediatek MT6789" RisingMaintainer="kaminarich"'
        export TARGET_ENABLE_BLUR=false
        export PRODUCT_NO_CAMERA=false
        export TARGET_PREBUILT_LAWNCHAIR_LAUNCHER=false
        export TARGET_DEFAULT_PIXEL_LAUNCHER=false
        export WITH_GMS=false
        export WITH_MICROG=false
        export TARGET_USES_PICO_GAPPS=false

        mka bacon -j$(nproc --all)

    - name: üì§ Upload hasil ke Pixeldrain
      if: success()
      working-directory: rom
      run: |
        ZIP=$(find out/target/product/KJ7 -name "*.zip" | head -n 1)
        echo "üì§ Uploading $ZIP"
        curl -u :${{ secrets.PIXELDRAIN_TOKEN }} \
             -F file=@"$ZIP" https://pixeldrain.com/api/file

    - name: üßπ Cleanup after build
      if: always()
      working-directory: rom
      run: |
        rm -rf out/ .repo/project-objects .repo/projects/*/.git
